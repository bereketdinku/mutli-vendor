"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/uploadthing";
exports.ids = ["vendor-chunks/uploadthing"];
exports.modules = {

/***/ "(ssr)/./node_modules/uploadthing/client/index.js":
/*!**************************************************!*\
  !*** ./node_modules/uploadthing/client/index.js ***!
  \**************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

eval("__webpack_require__.r(__webpack_exports__);\n/* harmony export */ __webpack_require__.d(__webpack_exports__, {\n/* harmony export */   genUploader: () => (/* binding */ genUploader),\n/* harmony export */   generateClientDropzoneAccept: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.generateClientDropzoneAccept),\n/* harmony export */   generateMimeTypes: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.generateMimeTypes),\n/* harmony export */   generatePermittedFileTypes: () => (/* reexport safe */ _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.generatePermittedFileTypes),\n/* harmony export */   version: () => (/* binding */ version)\n/* harmony export */ });\n/* harmony import */ var _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! @effect/schema/Schema */ \"(ssr)/./node_modules/@effect/schema/dist/esm/Schema.js\");\n/* harmony import */ var effect_Effect__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! effect/Effect */ \"(ssr)/./node_modules/effect/dist/esm/Effect.js\");\n/* harmony import */ var _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @uploadthing/shared */ \"(ssr)/./node_modules/@uploadthing/shared/dist/index.js\");\n/* harmony import */ var effect_Cause__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! effect/Cause */ \"(ssr)/./node_modules/effect/dist/esm/Cause.js\");\n/* harmony import */ var std_env__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! std-env */ \"(ssr)/./node_modules/std-env/dist/index.mjs\");\n\n\n\n\n\n\n\nvar version$1 = \"6.10.1\";\n\nconst uploadMultipartWithProgress = (file, presigned, opts)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function*() {\n        let uploadedBytes = 0;\n        const etags = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_1__.forEach(presigned.urls, (url, index)=>{\n            const offset = presigned.chunkSize * index;\n            const end = Math.min(offset + presigned.chunkSize, file.size);\n            const chunk = file.slice(offset, end);\n            return uploadPart({\n                url,\n                chunk: chunk,\n                contentDisposition: presigned.contentDisposition,\n                fileType: file.type,\n                fileName: file.name,\n                onProgress: (delta)=>{\n                    uploadedBytes += delta;\n                    const percent = uploadedBytes / file.size * 100;\n                    opts.onUploadProgress?.({\n                        file: file.name,\n                        progress: percent\n                    });\n                }\n            }).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.andThen((tag)=>({\n                    tag,\n                    partNumber: index + 1\n                })), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.retry({\n                while: (error)=>error instanceof _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.RetryError,\n                times: std_env__WEBPACK_IMPORTED_MODULE_2__.isTest ? 3 : 10,\n                schedule: _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.exponentialBackoff\n            }));\n        }, {\n            concurrency: \"inherit\"\n        }).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.tapErrorCause((error)=>opts.reportEventToUT(\"failure\", {\n                fileKey: presigned.key,\n                uploadId: presigned.uploadId,\n                fileName: file.name,\n                storageProviderError: effect_Cause__WEBPACK_IMPORTED_MODULE_3__.pretty(error).toString()\n            }, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Null)));\n        // Tell the server that the upload is complete\n        yield* opts.reportEventToUT(\"multipart-complete\", {\n            uploadId: presigned.uploadId,\n            fileKey: presigned.key,\n            etags\n        }, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Null);\n    });\nconst uploadPart = (opts)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.async((resume)=>{\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"PUT\", opts.url, true);\n        xhr.setRequestHeader(\"Content-Type\", opts.fileType);\n        xhr.setRequestHeader(\"Content-Disposition\", (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.contentDisposition)(opts.contentDisposition, opts.fileName));\n        xhr.addEventListener(\"load\", ()=>{\n            const etag = xhr.getResponseHeader(\"Etag\");\n            if (xhr.status >= 200 && xhr.status <= 299 && etag) {\n                return resume(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.succeed(etag));\n            }\n            return resume(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.RetryError()));\n        });\n        xhr.addEventListener(\"error\", ()=>resume(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.RetryError())));\n        let lastProgress = 0;\n        xhr.upload.addEventListener(\"progress\", (e)=>{\n            const delta = e.loaded - lastProgress;\n            lastProgress += delta;\n            opts.onProgress(delta);\n        });\n        xhr.send(opts.chunk);\n    });\n\nconst uploadPresignedPostWithProgress = (file, presigned, opts)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.async((resume)=>{\n        const xhr = new XMLHttpRequest();\n        xhr.open(\"POST\", presigned.url);\n        xhr.setRequestHeader(\"Accept\", \"application/xml\");\n        xhr.upload.addEventListener(\"progress\", ({ loaded, total })=>{\n            opts.onUploadProgress?.({\n                file: file.name,\n                progress: loaded / total * 100\n            });\n        });\n        xhr.addEventListener(\"load\", ()=>resume(xhr.status >= 200 && xhr.status < 300 ? effect_Effect__WEBPACK_IMPORTED_MODULE_1__.succeed(null) : opts.reportEventToUT(\"failure\", {\n                fileKey: presigned.key,\n                uploadId: null,\n                fileName: file.name,\n                storageProviderError: xhr.responseText\n            }, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Null)));\n        xhr.addEventListener(\"error\", ()=>resume(opts.reportEventToUT(\"failure\", {\n                fileKey: presigned.key,\n                uploadId: null,\n                fileName: file.name\n            }, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Null)));\n        const formData = new FormData();\n        Object.entries(presigned.fields).forEach(([k, v])=>formData.append(k, v));\n        formData.append(\"file\", file); // File data **MUST GO LAST**\n        xhr.send(formData);\n    });\n\n/**\n * =============================================================================\n * ======================== File Type Hierarchy ===============================\n * =============================================================================\n */ const FileUploadDataSchema = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    name: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    size: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Number,\n    type: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String\n});\nconst FileUploadDataWithCustomIdSchema = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.extend(FileUploadDataSchema, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    customId: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.NullOr(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String)\n}));\n_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.extend(FileUploadDataWithCustomIdSchema, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    key: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    url: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String\n}));\n/**\n * =============================================================================\n * ======================== Server Response Schemas ============================\n * =============================================================================\n */ const PresignedBaseSchema = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    key: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    fileName: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    fileType: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    fileUrl: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    pollingJwt: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    pollingUrl: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    contentDisposition: _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.ContentDispositionSchema,\n    customId: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.NullOr(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String)\n});\nconst MPUResponseSchema = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.extend(PresignedBaseSchema, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    urls: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Array(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String),\n    uploadId: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    chunkSize: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Number,\n    chunkCount: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Number\n}));\nconst PSPResponseSchema = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.extend(PresignedBaseSchema, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    url: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    fields: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Record(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String, _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String)\n}));\nconst PresignedURLResponseSchema = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Array(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Union(PSPResponseSchema, MPUResponseSchema));\n_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    status: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    fileData: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.optional(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n        fileKey: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.NullOr(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String),\n        fileName: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n        fileSize: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Number,\n        fileType: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n        metadata: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.NullOr(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String),\n        customId: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.NullOr(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String),\n        callbackUrl: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.optional(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String),\n        callbackSlug: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.optional(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String)\n    }))\n});\n_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    success: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Boolean,\n    message: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.optional(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String)\n});\n_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    status: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String\n});\n/**\n * =============================================================================\n * ======================== Client Action Payloads ============================\n * =============================================================================\n */ _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    files: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Array(FileUploadDataSchema),\n    input: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Unknown\n});\n_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    fileKey: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    uploadId: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.NullOr(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String),\n    storageProviderError: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.optional(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String),\n    fileName: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String\n});\n_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n    fileKey: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    uploadId: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n    etags: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Array(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n        tag: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.String,\n        partNumber: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Number\n    }))\n});\n\nconst maybeParseResponseXML = (maybeXml)=>{\n    const codeMatch = maybeXml.match(/<Code>(.*?)<\\/Code>/s);\n    const messageMatch = maybeXml.match(/<Message>(.*?)<\\/Message>/s);\n    const code = codeMatch?.[1];\n    const message = messageMatch?.[1];\n    if (!code || !message) return null;\n    return {\n        code: s3CodeToUploadThingCode[code] ?? DEFAULT_ERROR_CODE,\n        message\n    };\n};\n/**\n * Map S3 error codes to UploadThing error codes\n *\n * This is a subset of the S3 error codes, based on what seemed most likely to\n * occur in uploadthing. For a full list of S3 error codes, see:\n * https://docs.aws.amazon.com/AmazonS3/latest/API/ErrorResponses.html\n */ const DEFAULT_ERROR_CODE = \"UPLOAD_FAILED\";\nconst s3CodeToUploadThingCode = {\n    AccessDenied: \"FORBIDDEN\",\n    EntityTooSmall: \"TOO_SMALL\",\n    EntityTooLarge: \"TOO_LARGE\",\n    ExpiredToken: \"FORBIDDEN\",\n    IncorrectNumberOfFilesInPostRequest: \"TOO_MANY_FILES\",\n    InternalError: \"INTERNAL_SERVER_ERROR\",\n    KeyTooLongError: \"KEY_TOO_LONG\",\n    MaxMessageLengthExceeded: \"TOO_LARGE\"\n};\n\nconst createAPIRequestUrl = (config)=>{\n    const url = new URL(config.url);\n    const queryParams = new URLSearchParams(url.search);\n    queryParams.set(\"actionType\", config.actionType);\n    queryParams.set(\"slug\", config.slug);\n    url.search = queryParams.toString();\n    return url;\n};\n/**\n * Creates a \"client\" for reporting events to the UploadThing server via the user's API endpoint.\n * Events are handled in \"./handler.ts starting at L112\"\n */ const createUTReporter = (cfg)=>(type, payload, responseSchema)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function*() {\n            const url = createAPIRequestUrl({\n                url: cfg.url,\n                slug: cfg.endpoint,\n                actionType: type\n            });\n            let headers = typeof cfg.headers === \"function\" ? cfg.headers() : cfg.headers;\n            if (headers instanceof Promise) {\n                headers = yield* effect_Effect__WEBPACK_IMPORTED_MODULE_1__.promise(()=>headers);\n            }\n            const response = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.fetchEffJson)(url, responseSchema, {\n                method: \"POST\",\n                body: JSON.stringify(payload),\n                headers: {\n                    \"Content-Type\": \"application/json\",\n                    \"x-uploadthing-package\": cfg.package,\n                    \"x-uploadthing-version\": version$1,\n                    ...headers\n                }\n            }).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"FetchError\", (e)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.UploadThingError({\n                    code: \"INTERNAL_CLIENT_ERROR\",\n                    message: `Failed to report event \"${type}\" to UploadThing server`,\n                    cause: e\n                }))), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.catchTag(\"ParseError\", (e)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.UploadThingError({\n                    code: \"INTERNAL_CLIENT_ERROR\",\n                    message: \"Failed to parse response from UploadThing server\",\n                    cause: e\n                }))));\n            switch(type){\n                case \"failure\":\n                    {\n                        // why isn't this narrowed automatically?\n                        const p = payload;\n                        const parsed = maybeParseResponseXML(p.storageProviderError ?? \"\");\n                        if (parsed?.message) {\n                            return yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.UploadThingError({\n                                code: parsed.code,\n                                message: parsed.message\n                            });\n                        } else {\n                            return yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.UploadThingError({\n                                code: \"UPLOAD_FAILED\",\n                                message: `Failed to upload file ${p.fileName} to S3`,\n                                cause: p.storageProviderError\n                            });\n                        }\n                    }\n            }\n            return response;\n        });\n\nconst version = version$1;\nconst uploadFilesInternal = (endpoint, opts)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function*() {\n        const reportEventToUT = createUTReporter({\n            endpoint: String(endpoint),\n            package: opts.package,\n            url: (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.resolveMaybeUrlArg)(opts.url),\n            headers: opts.headers\n        });\n        const presigneds = yield* reportEventToUT(\"upload\", {\n            input: \"input\" in opts ? opts.input : null,\n            files: opts.files.map((f)=>({\n                    name: f.name,\n                    size: f.size,\n                    type: f.type\n                }))\n        }, PresignedURLResponseSchema);\n        return yield* effect_Effect__WEBPACK_IMPORTED_MODULE_1__.forEach(presigneds, (presigned)=>uploadFile(String(endpoint), {\n                ...opts,\n                reportEventToUT\n            }, presigned), {\n            concurrency: 6\n        });\n    });\nconst genUploader = (initOpts)=>{\n    return (endpoint, opts)=>uploadFilesInternal(endpoint, {\n            ...opts,\n            url: (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.resolveMaybeUrlArg)(initOpts?.url),\n            package: initOpts.package,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-member-access\n            input: opts.input\n        }).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.provideService(_uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.FetchContext, {\n            fetch: globalThis.fetch.bind(globalThis),\n            baseHeaders: {\n                \"x-uploadthing-version\": version$1,\n                \"x-uploadthing-api-key\": undefined,\n                \"x-uploadthing-fe-package\": initOpts.package,\n                \"x-uploadthing-be-adapter\": undefined\n            }\n        }), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.runPromise);\n};\nconst uploadFile = (slug, opts, presigned)=>effect_Effect__WEBPACK_IMPORTED_MODULE_1__.gen(function*() {\n        const file = opts.files.find((f)=>f.name === presigned.fileName);\n        if (!file) {\n            console.error(\"No file found for presigned URL\", presigned);\n            return yield* new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.UploadThingError({\n                code: \"NOT_FOUND\",\n                message: \"No file found for presigned URL\",\n                cause: `Expected file with name ${presigned.fileName} but got '${opts.files.join(\",\")}'`\n            });\n        }\n        opts.onUploadBegin?.({\n            file: file.name\n        });\n        if (\"urls\" in presigned) {\n            yield* uploadMultipartWithProgress(file, presigned, opts);\n        } else {\n            yield* uploadPresignedPostWithProgress(file, presigned, opts);\n        }\n        const PollingResponse = _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Union(_effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n            status: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Literal(\"done\"),\n            callbackData: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Any\n        }), _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Struct({\n            status: _effect_schema_Schema__WEBPACK_IMPORTED_MODULE_4__.Literal(\"still waiting\")\n        }));\n        let serverData = null;\n        if (!opts.skipPolling) {\n            serverData = yield* (0,_uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.fetchEffJson)(presigned.pollingUrl, PollingResponse, {\n                headers: {\n                    authorization: presigned.pollingJwt\n                }\n            }).pipe(effect_Effect__WEBPACK_IMPORTED_MODULE_1__.andThen((res)=>res.status === \"done\" ? effect_Effect__WEBPACK_IMPORTED_MODULE_1__.succeed(res.callbackData) : effect_Effect__WEBPACK_IMPORTED_MODULE_1__.fail(new _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.RetryError())), effect_Effect__WEBPACK_IMPORTED_MODULE_1__.retry({\n                while: (res)=>res instanceof _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.RetryError,\n                schedule: _uploadthing_shared__WEBPACK_IMPORTED_MODULE_0__.exponentialBackoff\n            }));\n        }\n        return {\n            name: file.name,\n            size: file.size,\n            key: presigned.key,\n            // eslint-disable-next-line @typescript-eslint/no-unsafe-assignment\n            serverData: serverData,\n            url: \"https://utfs.io/f/\" + presigned.key,\n            customId: presigned.customId,\n            type: file.type\n        };\n    });\n\n\n//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/uploadthing/client/index.js\n");

/***/ })

};
;