import { jsx } from 'react/jsx-runtime';
import { resolveMaybeUrlArg } from '@uploadthing/shared';
import { U as UploadButton } from './button-client-SozDaD-i.js';
export { g as generateReactHelpers } from './button-client-SozDaD-i.js';
import { U as UploadDropzone } from './dropzone-client-DsPLSiDH.js';
import { U as Uploader } from './uploader-client-BHbDutyX.js';
export { useDropzone } from '@uploadthing/dropzone/react';

const generateUploadButton = (opts)=>{
    const url = resolveMaybeUrlArg(opts?.url);
    const TypedButton = (props)=>/*#__PURE__*/ jsx(UploadButton, {
            ...props,
            url: url
        });
    return TypedButton;
};
const generateUploadDropzone = (opts)=>{
    const url = resolveMaybeUrlArg(opts?.url);
    const TypedDropzone = (props)=>/*#__PURE__*/ jsx(UploadDropzone, {
            ...props,
            url: url
        });
    return TypedDropzone;
};
const generateUploader = (opts)=>{
    const url = resolveMaybeUrlArg(opts?.url);
    const TypedUploader = (props)=>/*#__PURE__*/ jsx(Uploader, {
            ...props,
            url: url
        });
    return TypedUploader;
};
/**
 * @deprecated - use {@link generateUploadButton}, {@link generateUploadDropzone}, and {@link generateUploader} instead
 */ function generateComponents(initOpts) {
    return {
        UploadButton: generateUploadButton(initOpts),
        UploadDropzone: generateUploadDropzone(initOpts),
        Uploader: generateUploader(initOpts)
    };
}

export { UploadButton, UploadDropzone, Uploader, generateComponents, generateUploadButton, generateUploadDropzone, generateUploader };
